#pragma checksum "C:\Users\Cody\Source\Repos\JEDICommlink\RedisExplorerUWP\MainPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "A4A9220CB1EBBD575F2688ABE24BD03D"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedisExplorerUWP
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(global::Windows.UI.Xaml.Controls.CalendarDatePicker obj, global::System.Nullable<global::System.DateTimeOffset> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.DateTimeOffset) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.DateTimeOffset), targetNullValue);
                }
                obj.Date = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj8_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::RedisExplorerUWP.Model.SupportTicket dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9TextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;

            public MainPage_obj8_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 66 && columnNumber == 37)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 37)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 44)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 44)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 75 && columnNumber == 44)
                {
                    isobj13TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // MainPage.xaml line 64
                        this.obj8 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 9: // MainPage.xaml line 65
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10: // MainPage.xaml line 68
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // MainPage.xaml line 71
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // MainPage.xaml line 73
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // MainPage.xaml line 75
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj8.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::RedisExplorerUWP.Model.SupportTicket) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::RedisExplorerUWP.Model.SupportTicket)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::RedisExplorerUWP.Model.SupportTicket obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_SupportTicketNumber(obj.SupportTicketNumber, phase);
                        this.Update_CreatedOn(obj.CreatedOn, phase);
                        this.Update_Severity(obj.Severity, phase);
                        this.Update_SLAMet(obj.SLAMet, phase);
                        this.Update_SLAExpiry(obj.SLAExpiry, phase);
                    }
                }
            }
            private void Update_SupportTicketNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 65
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
            private void Update_CreatedOn(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 68
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj.ToString(), null);
                    }
                }
            }
            private void Update_Severity(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 71
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_SLAMet(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 73
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_SLAExpiry(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 75
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj.ToString(), null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::RedisExplorerUWP.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.ListView obj6;
            private global::Windows.UI.Xaml.Controls.TextBox obj19;
            private global::Windows.UI.Xaml.Controls.CalendarDatePicker obj21;
            private global::Windows.UI.Xaml.Controls.TextBox obj23;
            private global::Windows.UI.Xaml.Controls.CalendarDatePicker obj25;
            private global::Windows.UI.Xaml.Controls.TextBox obj27;
            private global::Windows.UI.Xaml.Controls.CalendarDatePicker obj29;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj6SelectedItemDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj21DateDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj25DateDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj29DateDisabled = false;

            private MainPage_obj1_BindingsTracking bindingsTracking;

            public MainPage_obj1_Bindings()
            {
                this.bindingsTracking = new MainPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 89 && columnNumber == 22)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 21)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 19)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 19)
                {
                    isobj6SelectedItemDisabled = true;
                }
                else if (lineNumber == 127 && columnNumber == 21)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 138 && columnNumber == 21)
                {
                    isobj21DateDisabled = true;
                }
                else if (lineNumber == 150 && columnNumber == 21)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 161 && columnNumber == 21)
                {
                    isobj25DateDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 21)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 184 && columnNumber == 21)
                {
                    isobj29DateDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // MainPage.xaml line 87
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // MainPage.xaml line 92
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // MainPage.xaml line 37
                        this.obj6 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 19: // MainPage.xaml line 125
                        this.obj19 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 21: // MainPage.xaml line 137
                        this.obj21 = (global::Windows.UI.Xaml.Controls.CalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_21(this.obj21);
                        break;
                    case 23: // MainPage.xaml line 148
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 25: // MainPage.xaml line 159
                        this.obj25 = (global::Windows.UI.Xaml.Controls.CalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_25(this.obj25);
                        break;
                    case 27: // MainPage.xaml line 171
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 29: // MainPage.xaml line 182
                        this.obj29 = (global::Windows.UI.Xaml.Controls.CalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_29(this.obj29);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::RedisExplorerUWP.MainPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::RedisExplorerUWP.MainPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_currentNick(obj.currentNick, phase);
                        this.Update_currentConnectionString(obj.currentConnectionString, phase);
                        this.Update_ticketList(obj.itemList, phase);
                        this.Update_selectedTicket(obj.selectedItem, phase);
                        this.Update_currentTicket(obj.currentItem, phase);
                    }
                }
            }
            private void Update_currentNick(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 87
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_currentConnectionString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 92
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ticketList(global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ticketList(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 37
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update_selectedTicket(global::RedisExplorerUWP.Model.SupportTicket obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_selectedTicket(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 37
                    if (!isobj6SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj6, obj, null);
                    }
                }
            }
            private void Update_currentTicket(global::RedisExplorerUWP.Model.SupportTicket obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_currentTicket(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_currentTicket_SupportTicketNumber(obj.SupportTicketNumber, phase);
                        this.Update_currentTicket_CreatedOn(obj.CreatedOn, phase);
                        this.Update_currentTicket_Severity(obj.Severity, phase);
                        this.Update_currentTicket_SLACreated(obj.SLACreated, phase);
                        this.Update_currentTicket_SLAMet(obj.SLAMet, phase);
                        this.Update_currentTicket_SLAExpiry(obj.SLAExpiry, phase);
                    }
                }
            }
            private void Update_currentTicket_SupportTicketNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 125
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj19, obj, null);
                    }
                }
            }
            private void Update_currentTicket_CreatedOn(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 137
                    if (!isobj21DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj21, (global::System.Nullable<global::System.DateTimeOffset>)this.LookupConverter("DateConverter").Convert(obj, typeof(global::System.Nullable<global::System.DateTimeOffset>), null, null), null);
                    }
                }
            }
            private void Update_currentTicket_Severity(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 148
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update_currentTicket_SLACreated(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 159
                    if (!isobj25DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj25, (global::System.Nullable<global::System.DateTimeOffset>)this.LookupConverter("DateConverter").Convert(obj, typeof(global::System.Nullable<global::System.DateTimeOffset>), null, null), null);
                    }
                }
            }
            private void Update_currentTicket_SLAMet(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 171
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_currentTicket_SLAExpiry(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 182
                    if (!isobj29DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj29, (global::System.Nullable<global::System.DateTimeOffset>)this.LookupConverter("DateConverter").Convert(obj, typeof(global::System.Nullable<global::System.DateTimeOffset>), null, null), null);
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.currentNick = this.obj4.Text;
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.currentConnectionString = this.obj5.Text;
                    }
                }
            }
            private void UpdateTwoWay_6_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.itemList = (global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket>)this.obj6.ItemsSource;
                    }
                }
            }
            private void UpdateTwoWay_6_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.selectedItem = (global::RedisExplorerUWP.Model.SupportTicket)this.obj6.SelectedItem;
                    }
                }
            }
            private void UpdateTwoWay_19_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.currentItem != null)
                        {
                            this.dataRoot.currentItem.SupportTicketNumber = this.obj19.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_21_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.currentItem != null)
                        {
                            this.dataRoot.currentItem.CreatedOn = (global::System.DateTime)this.LookupConverter("DateConverter").ConvertBack(this.obj21.Date, typeof(global::System.DateTime), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_23_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.currentItem != null)
                        {
                            this.dataRoot.currentItem.Severity = this.obj23.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_25_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.currentItem != null)
                        {
                            this.dataRoot.currentItem.SLACreated = (global::System.DateTime)this.LookupConverter("DateConverter").ConvertBack(this.obj25.Date, typeof(global::System.DateTime), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_27_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.currentItem != null)
                        {
                            this.dataRoot.currentItem.SLAMet = this.obj27.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_29_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.currentItem != null)
                        {
                            this.dataRoot.currentItem.SLAExpiry = (global::System.DateTime)this.LookupConverter("DateConverter").ConvertBack(this.obj29.Date, typeof(global::System.DateTime), null, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainPage_obj1_Bindings> weakRefToBindingObj; 

                public MainPage_obj1_BindingsTracking(MainPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainPage_obj1_Bindings>(obj);
                }

                public MainPage_obj1_Bindings TryGetBindingObject()
                {
                    MainPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ticketList(null);
                    UpdateChildListeners_selectedTicket(null);
                    UpdateChildListeners_currentTicket(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::RedisExplorerUWP.MainPage obj = sender as global::RedisExplorerUWP.MainPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_currentNick(obj.currentNick, DATA_CHANGED);
                                bindings.Update_currentConnectionString(obj.currentConnectionString, DATA_CHANGED);
                                bindings.Update_ticketList(obj.itemList, DATA_CHANGED);
                                bindings.Update_selectedTicket(obj.selectedItem, DATA_CHANGED);
                                bindings.Update_currentTicket(obj.currentItem, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "currentNick":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentNick(obj.currentNick, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "currentConnectionString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentConnectionString(obj.currentConnectionString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ticketList":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ticketList(obj.itemList, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "selectedTicket":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_selectedTicket(obj.selectedItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "currentTicket":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket(obj.currentItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::RedisExplorerUWP.MainPage obj)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_ticketList(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ticketList(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket> cache_ticketList = null;
                public void UpdateChildListeners_ticketList(global::System.Collections.ObjectModel.ObservableCollection<global::RedisExplorerUWP.Model.SupportTicket> obj)
                {
                    if (obj != cache_ticketList)
                    {
                        if (cache_ticketList != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ticketList).PropertyChanged -= PropertyChanged_ticketList;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ticketList).CollectionChanged -= CollectionChanged_ticketList;
                            cache_ticketList = null;
                        }
                        if (obj != null)
                        {
                            cache_ticketList = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ticketList;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ticketList;
                        }
                    }
                }
                public void PropertyChanged_selectedTicket(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::RedisExplorerUWP.Model.SupportTicket obj = sender as global::RedisExplorerUWP.Model.SupportTicket;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::RedisExplorerUWP.Model.SupportTicket cache_selectedTicket = null;
                public void UpdateChildListeners_selectedTicket(global::RedisExplorerUWP.Model.SupportTicket obj)
                {
                    if (obj != cache_selectedTicket)
                    {
                        if (cache_selectedTicket != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_selectedTicket).PropertyChanged -= PropertyChanged_selectedTicket;
                            cache_selectedTicket = null;
                        }
                        if (obj != null)
                        {
                            cache_selectedTicket = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_selectedTicket;
                        }
                    }
                }
                public void PropertyChanged_currentTicket(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::RedisExplorerUWP.Model.SupportTicket obj = sender as global::RedisExplorerUWP.Model.SupportTicket;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_currentTicket_SupportTicketNumber(obj.SupportTicketNumber, DATA_CHANGED);
                                bindings.Update_currentTicket_CreatedOn(obj.CreatedOn, DATA_CHANGED);
                                bindings.Update_currentTicket_Severity(obj.Severity, DATA_CHANGED);
                                bindings.Update_currentTicket_SLACreated(obj.SLACreated, DATA_CHANGED);
                                bindings.Update_currentTicket_SLAMet(obj.SLAMet, DATA_CHANGED);
                                bindings.Update_currentTicket_SLAExpiry(obj.SLAExpiry, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SupportTicketNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket_SupportTicketNumber(obj.SupportTicketNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreatedOn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket_CreatedOn(obj.CreatedOn, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Severity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket_Severity(obj.Severity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SLACreated":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket_SLACreated(obj.SLACreated, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SLAMet":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket_SLAMet(obj.SLAMet, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SLAExpiry":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_currentTicket_SLAExpiry(obj.SLAExpiry, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::RedisExplorerUWP.Model.SupportTicket cache_currentTicket = null;
                public void UpdateChildListeners_currentTicket(global::RedisExplorerUWP.Model.SupportTicket obj)
                {
                    if (obj != cache_currentTicket)
                    {
                        if (cache_currentTicket != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_currentTicket).PropertyChanged -= PropertyChanged_currentTicket;
                            cache_currentTicket = null;
                        }
                        if (obj != null)
                        {
                            cache_currentTicket = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_currentTicket;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Windows.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedItem();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_21(global::Windows.UI.Xaml.Controls.CalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_21_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_23(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_25(global::Windows.UI.Xaml.Controls.CalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_25_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_27(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_29(global::Windows.UI.Xaml.Controls.CalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_Date();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainPage.xaml line 15
                {
                    this.MainSplit = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 3: // MainPage.xaml line 82
                {
                    this.newConnectionDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 4: // MainPage.xaml line 87
                {
                    this.connectionNick = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 5: // MainPage.xaml line 92
                {
                    this.redisInput = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 6: // MainPage.xaml line 37
                {
                    this.RedisCache = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.RedisCache).SelectionChanged += this.RedisCache_SelectionChanged;
                    ((global::Windows.UI.Xaml.Controls.ListView)this.RedisCache).Loaded += this.List_Loaded;
                }
                break;
            case 14: // MainPage.xaml line 31
                {
                    this.ManageConnection = (global::Windows.UI.Xaml.Controls.MenuBarItem)(target);
                }
                break;
            case 15: // MainPage.xaml line 32
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element15 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element15).Click += this.OnClick_NewConnection;
                }
                break;
            case 16: // MainPage.xaml line 102
                {
                    this.PaneGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 17: // MainPage.xaml line 118
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element17 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element17).Click += this.Button_Close;
                }
                break;
            case 18: // MainPage.xaml line 119
                {
                    this.NumberHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19: // MainPage.xaml line 125
                {
                    this.SupportTicketNumber = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 20: // MainPage.xaml line 131
                {
                    this.CreatedHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 21: // MainPage.xaml line 137
                {
                    this.CreatedOn = (global::Windows.UI.Xaml.Controls.CalendarDatePicker)(target);
                }
                break;
            case 22: // MainPage.xaml line 142
                {
                    this.SeverityHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 24: // MainPage.xaml line 153
                {
                    this.SLACreatedHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 25: // MainPage.xaml line 159
                {
                    this.SLACreated = (global::Windows.UI.Xaml.Controls.CalendarDatePicker)(target);
                }
                break;
            case 26: // MainPage.xaml line 165
                {
                    this.SLAMetHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 28: // MainPage.xaml line 176
                {
                    this.SLAExpiryHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 29: // MainPage.xaml line 182
                {
                    this.SLAExpiry = (global::Windows.UI.Xaml.Controls.CalendarDatePicker)(target);
                }
                break;
            case 30: // MainPage.xaml line 189
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element30 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element30).Click += this.Button_Save;
                }
                break;
            case 31: // MainPage.xaml line 190
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element31 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element31).Click += this.Button_Delete;
                }
                break;
            case 32: // MainPage.xaml line 191
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element32 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element32).Click += this.Button_Create;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 8: // MainPage.xaml line 64
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element8 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    MainPage_obj8_Bindings bindings = new MainPage_obj8_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element8.DataContext);
                    element8.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element8, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element8, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

